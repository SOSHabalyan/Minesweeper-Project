{
  // .NET & C# Configuration
  "dotnet.completion.showCompletionItemsFromUnimportedNamespaces": true,
  "dotnet.inlayHints.enableInlayHintsForParameters": true,
  "dotnet.inlayHints.enableInlayHintsForLiteralParameters": true,
  "dotnet.inlayHints.enableInlayHintsForIndexerParameters": true,
  "dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": true,
  "dotnet.inlayHints.enableInlayHintsForOtherParameters": true,
  "dotnet.inlayHints.enableInlayHintsForTypes": true,
  "dotnet.inlayHints.enableInlayHintsForImplicitVariableTypes": true,
  "dotnet.inlayHints.enableInlayHintsForImplicitObjectCreation": true,
  "dotnet.server.useOmnisharp": false,
  "dotnet.unitTests.runSettingsPath": "",
  // C# Specific Settings
  "csharp.semanticHighlighting.enabled": true,
  "csharp.inlayHints.parameters.enabled": true,
  "csharp.inlayHints.parameters.forLiteralParameters": true,
  "csharp.inlayHints.parameters.forIndexerParameters": true,
  "csharp.inlayHints.parameters.forObjectCreationParameters": true,
  "csharp.inlayHints.parameters.forOtherParameters": true,
  "csharp.format.enable": true,
  "csharp.showOmnisharpLogOnError": true,
  // GitHub Copilot Configuration
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "csharp": true,
    "json": true,
    "jsonc": true,
    "xml": true,
    "html": true,
    "css": true,
    "javascript": true,
    "typescript": true,
    "dockerfile": true,
    "sql": true,
    "powershell": true,
    "shellscript": true
  },
  "github.copilot.advanced": {
    "debug.overrideEngine": "copilot-chat",
    "debug.testOverrideProxyUrl": "",
    "debug.overrideProxyUrl": "",
    "length": 500,
    "temperature": "",
    "top_p": "",
    "stops": {
      "*": [
        "\n\n\n"
      ],
      "csharp": [
        "\n\n",
        "// END",
        "/* END */"
      ],
      "json": [
        "\n\n"
      ],
      "markdown": [
        "\n\n"
      ]
    }
  },
  "github.copilot.chat.followUps": "always",
  "github.copilot.chat.localeOverride": "auto",
  "github.copilot.editor.enableAutoCompletions": true,
  "github.copilot.editor.enableCodeActions": true,
  "github.copilot.terminal.suggestEnabled": true,
  // IntelliCode Configuration
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "vsintellicode.features.python.deepLearning": "enabled",
  "vsintellicode.features.csharp.deepLearning": "enabled",
  // Editor Configuration for .NET Development
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "editor.codeActionsOnSave": {
    "source.organizeImports": "explicit",
    "source.fixAll": "explicit",
    "source.addMissingImports": "explicit"
  },
  "editor.suggestSelection": "first",
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.acceptSuggestionOnEnter": "on",
  "editor.tabCompletion": "on",
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "on",
    "strings": "on"
  },
  "editor.quickSuggestionsDelay": 10,
  "editor.parameterHints.enabled": true,
  "editor.autoClosingBrackets": "always",
  "editor.autoClosingQuotes": "always",
  "editor.autoSurround": "languageDefined",
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "editor.inlayHints.enabled": "on",
  "editor.semanticHighlighting.enabled": true,
  "editor.linkedEditing": true,
  "editor.fontFamily": "'FiraCode Nerd Font Mono', 'Hack Nerd Font Mono', 'SF Mono', 'Monaco', 'Cascadia Code', 'Fira Code', 'JetBrains Mono', Consolas, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 11,
  "editor.fontWeight": "normal",
  "editor.lineHeight": 1.4,
  "editor.minimap.enabled": true,
  "editor.minimap.showSlider": "always",
  "editor.rulers": [
    80,
    120
  ],
  "editor.wordWrap": "bounded",
  "editor.wordWrapColumn": 120,
  // File Associations for .NET
  "files.associations": {
    "*.cs": "csharp",
    "*.csx": "csharp",
    "*.cshtml": "razor",
    "*.razor": "razor",
    "*.vb": "vb",
    "*.fs": "fsharp",
    "*.fsx": "fsharp",
    "*.fsi": "fsharp",
    "*.ml": "fsharp",
    "*.mli": "fsharp",
    "*.config": "xml",
    "*.csproj": "xml",
    "*.fsproj": "xml",
    "*.vbproj": "xml",
    "*.sln": "plaintext",
    "*.nuspec": "xml",
    "appsettings*.json": "jsonc",
    "*.pubxml": "xml",
    "*.targets": "xml",
    "*.props": "xml",
    "Directory.Build.props": "xml",
    "Directory.Build.targets": "xml",
    "global.json": "jsonc"
  },
  // Files to exclude from file explorer
  "files.exclude": {
    "**/bin": true,
    "**/obj": true,
    "**/.vs": true,
    "**/node_modules": true,
    "**/.git": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/*.user": true,
    "**/*.userosscache": true,
    "**/*.sln.docstates": true,
    "**/.vscode/launch.json": false,
    "**/.vscode/tasks.json": false,
    "**/.vscode/settings.json": false
  },
  // Search configuration
  "search.exclude": {
    "**/bin": true,
    "**/obj": true,
    "**/node_modules": true,
    "**/.vs": true,
    "**/packages": true,
    "**/*.dll": true,
    "**/*.pdb": true,
    "**/*.exe": true
  },
  // Terminal Configuration
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.defaultProfile.osx": "bash",
  "terminal.integrated.fontFamily": "'FiraCode Nerd Font Mono', 'Hack Nerd Font Mono', 'SF Mono', 'Monaco', 'Inconsolata', 'Consolas', 'Courier New', monospace",
  "terminal.integrated.fontSize": 10,
  "terminal.integrated.fontWeight": "normal",
  "terminal.integrated.lineHeight": 1.2,
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "args": [
        "-NoLogo"
      ]
    },
    "Command Prompt": {
      "path": "cmd.exe",
      "args": []
    },
    "Git Bash": {
      "source": "Git Bash"
    }
  },
  "terminal.integrated.profiles.osx": {
    "bash": {
      "path": "bash",
      "args": [
        "--rcfile",
        "~/.bashrc_simple"
      ],
      "icon": "terminal-bash"
    },
    "zsh": {
      "path": "zsh",
      "args": [
        "-c",
        "source ~/.bashrc_simple 2>/dev/null || true; exec zsh"
      ]
    }
  },
  "terminal.integrated.env.osx": {
    "DOTNET_CLI_TELEMETRY_OPTOUT": "1",
    "DOTNET_SKIP_FIRST_TIME_EXPERIENCE": "1"
  },
  // Testing Configuration
  "dotnetCoreExplorer.enableTelemetry": false,
  "testExplorer.codeLens": true,
  "testExplorer.gutterDecoration": true,
  "testExplorer.onStart": "reset",
  "testExplorer.onReload": "reset",
  "testExplorer.sort": "byLocation",
  // Git Configuration
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.postCommitCommand": "none",
  "git.showInlineOpenFileAction": false,
  "git.suggestSmartCommit": true,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.currentLine.enabled": false,
  "gitlens.codeLens.enabled": true,
  "gitlens.codeLens.authors.enabled": true,
  "gitlens.codeLens.recentChange.enabled": true,
  // Debugging Configuration
  "debug.allowBreakpointsEverywhere": false,
  "debug.inlineValues": "on",
  "debug.showInStatusBar": "always",
  "debug.toolBarLocation": "floating",
  "debug.console.fontSize": 11,
  "debug.console.lineHeight": 22,
  // Security
  "security.workspace.trust.untrustedFiles": "prompt",
  "security.workspace.trust.banner": "always",
  "security.workspace.trust.startupPrompt": "always",
  // Performance
  "extensions.autoUpdate": false,
  "extensions.autoCheckUpdates": false,
  "workbench.enableExperiments": false,
  "telemetry.telemetryLevel": "off",
  // Forest Green Pantone Gradient Workspace Theming
  "workbench.colorTheme": "Default Dark Modern",
  // Semantic Token Color Customizations - C# Specific Forest Green
  // Language-specific settings
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp",
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.rulers": [
      80,
      120
    ],
    "editor.wordWrap": "bounded",
    "editor.wordWrapColumn": 120
  },
  "[razor]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp",
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.quickSuggestions": {
      "strings": true
    }
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.quickSuggestions": {
      "strings": true
    }
  },
  "[xml]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true
  },
  "[yaml]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true
  },
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    }
  },
  "[dockerfile]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },
  "[powershell]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },
  "[sql]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": true
  },
  "csharp.inlayHints.enableInlayHintsForTypes": true,
  "csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": true,
  "csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": true,
  "markdown.validate.enabled": true
}